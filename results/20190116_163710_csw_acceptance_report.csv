CSW Acceptance Testing Report for run starting Wed Jan 16 16:28:48 PST 2019
Class,Test Name,Result
csw.admin.server.log.HttpAndTcpLogAdminTest,get component log meta data for http service not supported,PASSED
csw.admin.server.log.HttpAndTcpLogAdminTest,set component log level for http service not supported,PASSED
csw.admin.server.log.HttpAndTcpLogAdminTest,get component log meta data and set log level for tcp service not supported,PASSED
csw.admin.server.log.HttpAndTcpLogAdminTest,set component log level for tcp service not supported,PASSED
csw.admin.server.cli.ArgsParserTest,parse without arguments,PASSED
csw.admin.server.cli.ArgsParserTest,parse when only port argument provided,PASSED
csw.admin.server.cli.ArgsParserTest,parse with all arguments,PASSED
csw.location.server.scaladsl.LocationServiceCompTestWithCluster,should able to register, resolve, list and unregister tcp location,PASSED
csw.location.server.scaladsl.LocationServiceCompTestWithCluster,should able to register, resolve, list and unregister http location,PASSED
csw.location.server.scaladsl.LocationServiceCompTestWithCluster,should able to register, resolve, list and unregister akka location,PASSED
csw.location.server.scaladsl.LocationServiceCompTestWithCluster,akka location death watch actor should unregister services whose actorRef is terminated,PASSED
csw.location.server.scaladsl.LocationServiceCompTestWithCluster,should able to track tcp connection and get location updated(on registration) and remove(on unregistration) messages,PASSED
csw.location.server.scaladsl.LocationServiceCompTestWithCluster,should be able to subscribe a tcp connection and receive notifications via callback,PASSED
csw.location.server.scaladsl.LocationServiceCompTestWithCluster,should able to track http and akka connection registered before tracking started,PASSED
csw.location.server.scaladsl.LocationServiceCompTestWithCluster,should able to stop tracking,PASSED
csw.location.server.scaladsl.LocationServiceCompTestWithCluster,should not register a different Registration(connection + port/URI/actorRef) against already registered name,PASSED
csw.location.server.scaladsl.LocationServiceCompTestWithCluster,registering an already registered Registration(connection + port/URI/actorRef) on same machine should not result in failure,PASSED
csw.location.server.scaladsl.LocationServiceCompTestWithCluster,unregistering an already unregistered connection does not result in failure,PASSED
csw.location.server.scaladsl.LocationServiceCompTestWithCluster,should able to resolve tcp connection,PASSED
csw.location.server.scaladsl.LocationServiceCompTestWithCluster,should filter components with component type,PASSED
csw.location.server.scaladsl.LocationServiceCompTestWithCluster,should filter connections based on Connection type,PASSED
csw.location.server.scaladsl.LocationServiceCompTestWithCluster,should filter connections based on hostname,PASSED
csw.location.server.scaladsl.LocationServiceCompTestWithCluster,should filter akka connections based on prefix,PASSED
csw.location.server.scaladsl.LocationServiceCompTestWithCluster,should able to unregister all components,PASSED
csw.location.server.cli.ArgsParserTest,parse without arguments,PASSED
csw.location.server.cli.ArgsParserTest,parse with all arguments without testMode,PASSED
csw.location.server.cli.ArgsParserTest,parse with all arguments --testMode,PASSED
csw.location.server.cli.ArgsParserTest,parse with some arguments,PASSED
csw.location.server.commons.BlockingUtilsTest,test that Poll method bottoms out and returns expected result,PASSED
csw.location.server.commons.BlockingUtilsTest,test that Poll method detects predicate fulfillment,PASSED
csw.location.server.scaladsl.MultiActorSystemTest,ensure that location service works across two actorSystems within the same JVM,PASSED
csw.location.server.internal.StreamExtTest,distinctUntilChanged,PASSED
csw.location.server.commons.ClusterSettingsTest,exception is thrown when settings are not found for a given cluster name,PASSED
csw.location.server.commons.ClusterSettingsTest,default cluster settings are used when no custom parameters are supplied,PASSED
csw.location.server.commons.ClusterSettingsTest,cluster settings with custom parameters are used,PASSED
csw.location.server.commons.ClusterSettingsTest,cluster settings with join Local,PASSED
csw.location.server.commons.ClusterSettingsTest,cluster settings with custom values,PASSED
csw.location.server.commons.ClusterSettingsTest,cluster settings with system properties,PASSED
csw.location.models.RegistrationTest,should able to create the AkkaRegistration which should internally create AkkaLocation,PASSED
csw.location.models.RegistrationTest,should able to create the HttpRegistration which should internally create HttpLocation,PASSED
csw.location.models.RegistrationTest,should able to create the TcpRegistration which should internally create TcpLocation,PASSED
csw.location.models.RegistrationTest,should not allow AkkaRegistration using local ActorRef,PASSED
csw.location.server.http.LocationServiceCompTestWithHttp,should able to register, resolve, list and unregister tcp location,PASSED
csw.location.server.http.LocationServiceCompTestWithHttp,should able to register, resolve, list and unregister http location,PASSED
csw.location.server.http.LocationServiceCompTestWithHttp,should able to register, resolve, list and unregister akka location,PASSED
csw.location.server.http.LocationServiceCompTestWithHttp,akka location death watch actor should unregister services whose actorRef is terminated,PASSED
csw.location.server.http.LocationServiceCompTestWithHttp,should able to track tcp connection and get location updated(on registration) and remove(on unregistration) messages,PASSED
csw.location.server.http.LocationServiceCompTestWithHttp,should be able to subscribe a tcp connection and receive notifications via callback,PASSED
csw.location.server.http.LocationServiceCompTestWithHttp,should able to track http and akka connection registered before tracking started,PASSED
csw.location.server.http.LocationServiceCompTestWithHttp,should able to stop tracking,PASSED
csw.location.server.http.LocationServiceCompTestWithHttp,should not register a different Registration(connection + port/URI/actorRef) against already registered name,PASSED
csw.location.server.http.LocationServiceCompTestWithHttp,registering an already registered Registration(connection + port/URI/actorRef) on same machine should not result in failure,PASSED
csw.location.server.http.LocationServiceCompTestWithHttp,unregistering an already unregistered connection does not result in failure,PASSED
csw.location.server.http.LocationServiceCompTestWithHttp,should able to resolve tcp connection,PASSED
csw.location.server.http.LocationServiceCompTestWithHttp,should filter components with component type,PASSED
csw.location.server.http.LocationServiceCompTestWithHttp,should filter connections based on Connection type,PASSED
csw.location.server.http.LocationServiceCompTestWithHttp,should filter connections based on hostname,PASSED
csw.location.server.http.LocationServiceCompTestWithHttp,should filter akka connections based on prefix,PASSED
csw.location.server.http.LocationServiceCompTestWithHttp,should able to unregister all components,PASSED
csw.config.api.commons.BinaryUtilsTest,testIsNotTextIsFalseForMoreThan85percentASCIICharacters,PASSED
csw.config.api.commons.BinaryUtilsTest,testIsBinaryIsFalseForMoreThan85percentASCIICharacters,PASSED
csw.config.api.commons.BinaryUtilsTest,testIsNotTextIsTrueForLessThan85percentASCIICharacters,PASSED
csw.config.api.commons.BinaryUtilsTest,testIsBinaryIsTrueForLessThan85percentASCIICharacters,PASSED
csw.config.api.models.ConfigDataTest,should able to retrieve string from Config Data source,PASSED
csw.config.api.models.ConfigDataTest,should able to generate InputStream from Config Data source,PASSED
csw.config.api.models.ConfigDataTest,should create source of ByteString from string,PASSED
csw.config.api.models.ConfigDataTest,should be able to save ConfigData to local disc,PASSED
csw.config.api.models.ConfigDataTest,should be able to get Config object when data is in valid HOCON format,PASSED
csw.config.api.models.ConfigDataTest,config object conversion should receive exception when data is NOT in valid HOCON format,PASSED
csw.config.server.commons.PathValidatorTest,should return false for invalid path,PASSED
csw.config.server.commons.PathValidatorTest,should return true for valid file path,PASSED
csw.config.server.commons.SVNDirEntryExtTest,should match the pattern for relative path,PASSED
csw.config.server.commons.SVNDirEntryExtTest,should not match invalid pattern for relative path,PASSED
csw.config.server.commons.SVNDirEntryExtTest,should detect annex and normal file based on type,PASSED
csw.config.server.cli.ArgsParserTest,should set init to false and port to None if no options are provided,PASSED
csw.config.server.cli.ArgsParserTest,should set init to true if option --initRepo is provided,PASSED
csw.config.server.cli.ArgsParserTest,should set port with the value provided with -- port option,PASSED
csw.config.server.cli.ArgsParserTest,should set init to true if --initRepo option is provided and port with the value provided with -- port option,PASSED
csw.config.server.files.AnnexFileServiceTest,storing annex file,PASSED
csw.config.server.files.AnnexFileServiceTest,getting annex file,PASSED
csw.config.server.svn.SvnConfigServiceTest,should able to upload and get component configurations from config service,PASSED
csw.config.server.svn.SvnConfigServiceTest,should able to upload and get binary configurations from config service,PASSED
csw.config.server.svn.SvnConfigServiceTest,should able to create a file and retrieve the same,PASSED
csw.config.server.svn.SvnConfigServiceTest,should ignore '/' at the beginning of file path and create a file,PASSED
csw.config.server.svn.SvnConfigServiceTest,should throw FileAlreadyExists while creating a file if it already exists in repository - assume svn first,PASSED
csw.config.server.svn.SvnConfigServiceTest,should throw FileAlreadyExists while creating a file if it already exists in repository - assume annex first,PASSED
csw.config.server.svn.SvnConfigServiceTest,should able to update existing file and get the file with updated content,PASSED
csw.config.server.svn.SvnConfigServiceTest,update should throw FileNotFoundException if a file does not exists in repository,PASSED
csw.config.server.svn.SvnConfigServiceTest,each revision of file should have unique identifier,PASSED
csw.config.server.svn.SvnConfigServiceTest,get call should return `None` if a file does not exists in repository,PASSED
csw.config.server.svn.SvnConfigServiceTest,should able to retrieve the specific version of file by config ID,PASSED
csw.config.server.svn.SvnConfigServiceTest,should get the correct version of file based on time,PASSED
csw.config.server.svn.SvnConfigServiceTest,should get the initial version of file if date provided is before the creation date,PASSED
csw.config.server.svn.SvnConfigServiceTest,should record datetime for creation of config file,PASSED
csw.config.server.svn.SvnConfigServiceTest,should record datetime when config file is updated,PASSED
csw.config.server.svn.SvnConfigServiceTest,should get the history of a file,PASSED
csw.config.server.svn.SvnConfigServiceTest,should list all the available config files,PASSED
csw.config.server.svn.SvnConfigServiceTest,exists should return false if file does not exist,PASSED
csw.config.server.svn.SvnConfigServiceTest,exists should return true if file exist,PASSED
csw.config.server.svn.SvnConfigServiceTest,should able to delete existing file,PASSED
csw.config.server.svn.SvnConfigServiceTest,deleting non existing file should throw FileNotFoundException,PASSED
csw.config.server.svn.SvnConfigServiceTest,delete removes all versions of a file,PASSED
csw.config.server.svn.SvnConfigServiceTest,should able to get, set and reset the active version of config file,PASSED
csw.config.server.svn.SvnConfigServiceTest,should able to get history of active versions of file,PASSED
csw.config.server.svn.SvnConfigServiceTest,getActive and getActiveVersion should return None if file does not exists,PASSED
csw.config.server.svn.SvnConfigServiceTest,set and reset active should throw FileNotFound exception if file or version does not exists,PASSED
csw.config.server.svn.SvnConfigServiceTest,should be able to store and retrieve file from annex store,PASSED
csw.config.server.svn.SvnConfigServiceTest,should list files from annex store without .$sha1 suffix,PASSED
csw.config.server.svn.SvnConfigServiceTest,should be able to update and retrieve the history of a file in annex store,PASSED
csw.config.server.svn.SvnConfigServiceTest,should able to get history of active versions of file from annex store,PASSED
csw.config.server.svn.SvnConfigServiceTest,should be able to get active file from annex store,PASSED
csw.config.server.svn.SvnConfigServiceTest,should be able to get time stamped file from annex store,PASSED
csw.config.server.svn.SvnConfigServiceTest,should exclude .$active files from list,PASSED
csw.config.server.svn.SvnConfigServiceTest,should list all files in a repository,PASSED
csw.config.server.svn.SvnConfigServiceTest,should give empty list if pattern does not match any file,PASSED
csw.config.server.svn.SvnConfigServiceTest,should filter list based on the pattern,PASSED
csw.config.server.svn.SvnConfigServiceTest,should filter list based on the type and pattern,PASSED
csw.config.server.svn.SvnConfigServiceTest,should get the correct active version of the file based on time,PASSED
csw.config.server.svn.SvnConfigServiceTest,should get metadata,PASSED
csw.config.server.svn.SvnConfigServiceTest,create call should create a normal file and active file in repo and reset should not delete active file,PASSED
csw.config.client.javadsl.JConfigClientApiTest,testConfigClientApi,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testFileAlreadyExistsExceptionOnCreate,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testGetReturnsNoneIfFileNotExists,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testUpdateExistingFile,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testListIsFilteredBasedOnTypeAndPattern,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testListFilesFromAnnexStoreWithoutShaSuffix,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testRetrieveVersionBasedOnDate,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testGetAndSetActiveConfigFileFromAnnexStore,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testGetHistoryOfActiveVersionsOfFile,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testListAllFiles,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testActiveVersionBasedOnTime,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testCreateFileInAnnexStore,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testFileExistsInAnnexStore,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testEachRevisionHasUniqueId,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testListIsFilteredBasedOnPattern,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testSpecificVersionRetrieval,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testRetrieveVersionBasedOnDateForFileInAnnexStore,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testGetMetadata,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testHistoryOfAFile,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testGetSetAndResetActiveConfigFile,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testDelete,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testExists,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testGetActiveReturnsNoneIfFileNotExist,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testUpdateReturnsFileNotFoundExceptionOnAbsenceOfFile,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testUpdateAndHistoryOfFilesInAnnexStore,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testActiveFilesAreExcludedInList,PASSED
csw.config.client.javadsl.JConfigAdminApiTest,testCreateAndRetrieveFile,PASSED
csw.config.client.internal.ConfigServiceResolverTest,should throw exception if not able to resolve config service http server,PASSED
csw.config.client.internal.ConfigServiceResolverTest,should give URI for resolved config service,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should able to upload and get component configurations from config service,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should able to upload and get binary configurations from config service,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should able to create a file and retrieve the same,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should ignore '/' at the beginning of file path and create a file,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should throw FileAlreadyExists while creating a file if it already exists in repository - assume svn first,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should throw FileAlreadyExists while creating a file if it already exists in repository - assume annex first,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should able to update existing file and get the file with updated content,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,update should throw FileNotFoundException if a file does not exists in repository,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,each revision of file should have unique identifier,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,get call should return `None` if a file does not exists in repository,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should able to retrieve the specific version of file by config ID,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should get the correct version of file based on time,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should get the initial version of file if date provided is before the creation date,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should record datetime for creation of config file,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should record datetime when config file is updated,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should get the history of a file,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should list all the available config files,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,exists should return false if file does not exist,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,exists should return true if file exist,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should able to delete existing file,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,deleting non existing file should throw FileNotFoundException,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,delete removes all versions of a file,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should able to get, set and reset the active version of config file,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should able to get history of active versions of file,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,getActive and getActiveVersion should return None if file does not exists,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,set and reset active should throw FileNotFound exception if file or version does not exists,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should be able to store and retrieve file from annex store,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should list files from annex store without .$sha1 suffix,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should be able to update and retrieve the history of a file in annex store,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should able to get history of active versions of file from annex store,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should be able to get active file from annex store,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should be able to get time stamped file from annex store,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should exclude .$active files from list,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should list all files in a repository,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should give empty list if pattern does not match any file,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should filter list based on the pattern,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should filter list based on the type and pattern,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should get the correct active version of the file based on time,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should get metadata,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should throw exception for invalid path,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should throw invalid input exception if pattern is invalid,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should throw Unauthorized exception when not logged in,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should throw NotAllowed exception when user does not have correct role,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should get the history of a file with correct username,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should able to get history of active versions of file with correct user names,PASSED
csw.config.client.scaladsl.ConfigAdminApiTest,should get the list of a file with correct username,PASSED
csw.config.client.scaladsl.ConfigClientApiTest,should able to get, set and reset the active version of config file,PASSED
csw.config.client.commons.ConfigUtilsTest,should throw exception if input file and default config is empty,PASSED
csw.config.client.commons.ConfigUtilsTest,should return default config if input file if not provided,PASSED
csw.config.client.commons.ConfigUtilsTest,should use input file for config,PASSED
csw.config.client.commons.ConfigUtilsTest,should throw exception if input file does not exist,PASSED
csw.config.client.commons.ConfigUtilsTest,should get config from remote input file,PASSED
csw.config.cli.ArgsParserTest,test arguments without specifying operation,PASSED
csw.config.cli.ArgsParserTest,test create with no sub-options,PASSED
csw.config.cli.ArgsParserTest,test create with all applicable sub-options,PASSED
csw.config.cli.ArgsParserTest,test create with bare minimum sub-options,PASSED
csw.config.cli.ArgsParserTest,test update with no sub-options,PASSED
csw.config.cli.ArgsParserTest,test update with all applicable sub-options,PASSED
csw.config.cli.ArgsParserTest,test get with no sub-options,PASSED
csw.config.cli.ArgsParserTest,test get with all applicable sub-options,PASSED
csw.config.cli.ArgsParserTest,test get with date sub-option,PASSED
csw.config.cli.ArgsParserTest,test get with bare minimum sub-options,PASSED
csw.config.cli.ArgsParserTest,test delete with no sub-options,PASSED
csw.config.cli.ArgsParserTest,test delete with sub-options,PASSED
csw.config.cli.ArgsParserTest,test list,PASSED
csw.config.cli.ArgsParserTest,test list with pattern,PASSED
csw.config.cli.ArgsParserTest,test list with type,PASSED
csw.config.cli.ArgsParserTest,test list with type and pattern,PASSED
csw.config.cli.ArgsParserTest,test history with no sub-options,PASSED
csw.config.cli.ArgsParserTest,test history with all sub-options,PASSED
csw.config.cli.ArgsParserTest,test history with max sub-option,PASSED
csw.config.cli.ArgsParserTest,test history with from and to sub-options,PASSED
csw.config.cli.ArgsParserTest,test setActiveVersion with all sub-options,PASSED
csw.config.cli.ArgsParserTest,test resetActiveVersion with no sub-options,PASSED
csw.config.cli.ArgsParserTest,test resetActiveVersion with sub-options,PASSED
csw.config.cli.ArgsParserTest,test getActiveVersion,PASSED
csw.config.cli.ArgsParserTest,test getActiveByTime with date sub-option,PASSED
csw.config.cli.ArgsParserTest,test historyActive with no sub-options,PASSED
csw.config.cli.ArgsParserTest,test historyActive with all sub-options,PASSED
csw.config.cli.ArgsParserTest,test historyActive with max sub-option,PASSED
csw.config.cli.ArgsParserTest,test historyActive with from and to sub-options,PASSED
csw.config.cli.ArgsParserTest,test getMetadata,PASSED
csw.config.cli.ArgsParserTest,test getMetadata with locationHost,PASSED
csw.config.cli.ArgsParserTest,test exists with no sub-options,PASSED
csw.config.cli.ArgsParserTest,test exists with sub-options,PASSED
csw.config.cli.ArgsParserTest,test getActive,PASSED
csw.config.cli.ArgsParserTest,test login,PASSED
csw.config.cli.ArgsParserTest,test logout,PASSED
csw.params.core.states.JStateVariableTest,shouldAbleToCreateDemandState,PASSED
csw.params.core.states.JStateVariableTest,shouldAbleToCreateCurrentState,PASSED
csw.params.core.states.JStateVariableTest,shouldAbleToCreateCurrentStatesUsingList,PASSED
csw.params.core.states.JStateVariableTest,shouldAbleToCreateCurrentStatesUsingVargs,PASSED
csw.params.core.states.JStateVariableTest,shouldAbleToMatchWithDefaultMatcher,PASSED
csw.params.core.states.JStateVariableTest,shouldAbleToCreateCurrentStateFromSetup,PASSED
csw.params.core.states.JStateVariableTest,shouldAbleToCreateDemandStateFromSetup,PASSED
csw.params.core.models.JMatrixDataTest,shouldCreateMatrixDataFromJavaArrays,PASSED
csw.params.events.JEventsTest,shouldAbleToRemoveParamsInSystemEvent,PASSED
csw.params.events.JEventsTest,shouldAbleToRemoveParamsInObserveEvent,PASSED
csw.params.events.JEventsTest,shouldAbleToCreateAndAccessSystemEvent,PASSED
csw.params.events.JEventsTest,shouldBeUniqueIdWhenParametersAreAddedOrRemovedForObserve,PASSED
csw.params.events.JEventsTest,shouldBeUniqueWhenParametersAreAddedOrRemovedForSystem,PASSED
csw.params.events.JEventsTest,shouldAbleToCreateAndAccessObserveEvent,PASSED
csw.params.core.formats.JsonTest,Test Subsystem JSON should encode and decode properly,PASSED
csw.params.core.formats.JsonTest,Test Prefix should encode and decode properly,PASSED
csw.params.core.formats.JsonTest,Test Units JSON should encode and decode properly,PASSED
csw.params.core.formats.JsonTest,Test concrete items char item encode/decode without units,PASSED
csw.params.core.formats.JsonTest,Test concrete items char item encode/decode with units,PASSED
csw.params.core.formats.JsonTest,Test concrete items short item encode/decode,PASSED
csw.params.core.formats.JsonTest,Test concrete items int item encode/decode,PASSED
csw.params.core.formats.JsonTest,Test concrete items long item encode/decode,PASSED
csw.params.core.formats.JsonTest,Test concrete items float item encode/decode,PASSED
csw.params.core.formats.JsonTest,Test concrete items double item encode/decode,PASSED
csw.params.core.formats.JsonTest,Test concrete items boolean item encode/decode,PASSED
csw.params.core.formats.JsonTest,Test concrete items string item encode/decode,PASSED
csw.params.core.formats.JsonTest,Testing Items should encode and decode items list,PASSED
csw.params.core.formats.JsonTest,Commands and Events JSON Should encode/decode a Setup,PASSED
csw.params.core.formats.JsonTest,Commands and Events JSON Should encode/decode an Observe,PASSED
csw.params.core.formats.JsonTest,Commands and Events JSON Should encode/decode an Wait,PASSED
csw.params.core.formats.JsonTest,Commands and Events JSON Should encode/decode an ObserveEvent,PASSED
csw.params.core.formats.JsonTest,Commands and Events JSON Should encode/decode an SystemEvent,PASSED
csw.params.core.formats.JsonTest,Commands and Events JSON Should encode/decode an CurrentState,PASSED
csw.params.core.formats.JsonTest,Commands and Events JSON Should encode/decode an DemandState,PASSED
csw.params.core.formats.JsonTest,Test Custom RaDecItem Should allow custom RaDecItem,PASSED
csw.params.core.formats.JsonTest,Test Double Matrix items Should allow double matrix values,PASSED
csw.params.core.formats.JsonTest,Test Double Array items Should allow double array values,PASSED
csw.params.core.formats.JsonTest,Test Int Matrix items Should allow int matrix values,PASSED
csw.params.core.formats.JsonTest,Test Int Array items Should allow int array values,PASSED
csw.params.core.formats.JsonTest,Test Byte Matrix items Should allow byte matrix values,PASSED
csw.params.core.formats.JsonTest,Test Byte Array items Should allow byte array values,PASSED
csw.params.core.formats.JsonTest,Test Short Matrix items Should allow short matrix values,PASSED
csw.params.core.formats.JsonTest,Test Short Array items Should allow short array values,PASSED
csw.params.core.formats.JsonTest,Test Long Matrix items Should allow long matrix values,PASSED
csw.params.core.formats.JsonTest,Test Long Array items Should allow long array values,PASSED
csw.params.core.formats.JsonTest,Test Choice items Should allow choice/enum values,PASSED
csw.params.core.formats.JsonTest,testing StructItem JSON support should allow Struct values,PASSED
csw.params.core.models.JStructTest,shouldAbleToCreateWithSetOfParams,PASSED
csw.params.core.models.JStructTest,shouldAbleToCreateWithVarArgs,PASSED
csw.params.commands.IdTest,should able to create setup commands having unique runId,PASSED
csw.params.commands.IdTest,should able to create observe commands having unique runId,PASSED
csw.params.commands.IdTest,should able to create wait commands having unique runId,PASSED
csw.params.events.EventsTest,SystemEvent Test should create with prefix and eventName,PASSED
csw.params.events.EventsTest,SystemEvent Test should create with prefix, eventName, paramSet,PASSED
csw.params.events.EventsTest,SystemEvent Test Should allow removing,PASSED
csw.params.events.EventsTest,SystemEvent Test Should allow adding,PASSED
csw.params.events.EventsTest,SystemEvent Test Should access metadata fields,PASSED
csw.params.events.EventsTest,SystemEvent Test each event created should be unique,PASSED
csw.params.events.EventsTest,ObserveEvent Test should create with prefix and eventName,PASSED
csw.params.events.EventsTest,ObserveEvent Test should create with prefix, eventName and paramSet,PASSED
csw.params.events.EventsTest,ObserveEvent Test Should allow removing,PASSED
csw.params.events.EventsTest,ObserveEvent Test Should allow adding,PASSED
csw.params.events.EventsTest,ObserveEvent Test Should access metadata fields,PASSED
csw.params.events.EventsTest,ObserveEvent Test each event created should be unique,PASSED
csw.params.commands.JCommandsTest,shouldAbleToCreateAndAccessWaitCommand,PASSED
csw.params.commands.JCommandsTest,shouldAbleToCreateAndAccessSetupCommand,PASSED
csw.params.commands.JCommandsTest,shoulRdAbleToCloneAnExistingCommand,PASSED
csw.params.commands.JCommandsTest,shouldAbleToCreateAndAccessObserveCommand,PASSED
csw.params.core.generics.JChoiceKeyTypeTest,choicesAPIShouldBeAccessible,PASSED
csw.params.core.generics.JChoiceKeyTypeTest,shouldThrowExceptionForInvalidChoice,PASSED
csw.params.core.generics.JChoiceKeyTypeTest,shouldAbleToCreateChoiceParameterWithUnits,PASSED
csw.params.core.generics.JChoiceKeyTypeTest,choiceKeyShouldHaveNameTypeAndChoices,PASSED
csw.params.core.generics.JChoiceKeyTypeTest,shouldAbleToCreateChoiceParameterWithoutUnits,PASSED
csw.params.core.formats.JsonContractTest,Test Sequence Commands should adhere to specified standard Setup json format,PASSED
csw.params.core.formats.JsonContractTest,Test Sequence Commands should adhere to specified standard Observe json format,PASSED
csw.params.core.formats.JsonContractTest,Test Sequence Commands should adhere to specified standard Wait json format,PASSED
csw.params.core.formats.JsonContractTest,Test Events should adhere to specified standard ObserveEvent json format,PASSED
csw.params.core.formats.JsonContractTest,Test Events should adhere to specified standard SystemEvent json format,PASSED
csw.params.core.formats.JsonContractTest,Test State Variables should adhere to specified standard CurrentState json format,PASSED
csw.params.core.formats.JsonContractTest,Test State Variables should adhere to specified standard DemandState json format,PASSED
csw.params.core.formats.JsonContractTest,Exercise all types of keys should able to serialize and deserialize Setup command with all keys to and from json,PASSED
csw.params.core.generics.JArrayKeyTypeTest,testDoubleArrayKeyParameter,PASSED
csw.params.core.generics.JArrayKeyTypeTest,testByteArrayKeyParameter,PASSED
csw.params.core.generics.JArrayKeyTypeTest,testIntArrayKeyParameter,PASSED
csw.params.core.generics.JArrayKeyTypeTest,testLongArrayKeyParameter,PASSED
csw.params.core.generics.JArrayKeyTypeTest,testFloatArrayKeyParameter,PASSED
csw.params.core.generics.JArrayKeyTypeTest,testShortArrayKeyParameter,PASSED
csw.params.core.models.JArrayDataTest,shouldCreateArrayDataFromJavaArray,PASSED
csw.params.core.generics.KeyParameterTest,basic key tests should have correct name,PASSED
csw.params.core.generics.KeyParameterTest,basic key tests should have equality based on name,PASSED
csw.params.core.generics.KeyParameterTest,test booleanKey should allow single val,PASSED
csw.params.core.generics.KeyParameterTest,test booleanKey should work with list, withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test booleanKey should work with list, units,PASSED
csw.params.core.generics.KeyParameterTest,test charItem should allow single val,PASSED
csw.params.core.generics.KeyParameterTest,test charItem should work with list, withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test charItem should work with list, units,PASSED
csw.params.core.generics.KeyParameterTest,test ByteItem should allow single val,PASSED
csw.params.core.generics.KeyParameterTest,test ByteItem should work with list, withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test ByteItem should work with list, units,PASSED
csw.params.core.generics.KeyParameterTest,test ByteArrayKey should test single item,PASSED
csw.params.core.generics.KeyParameterTest,test ByteArrayKey should test with list, withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test ByteArrayKey should test with list, units,PASSED
csw.params.core.generics.KeyParameterTest,test ByteArrayKey should test using one array with and without units,PASSED
csw.params.core.generics.KeyParameterTest,test ByteArrayKey should test using var args,PASSED
csw.params.core.generics.KeyParameterTest,test byteMatrixKey should work with a single item,PASSED
csw.params.core.generics.KeyParameterTest,test byteMatrixKey should work with list and withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test byteMatrixKey should work with list and units,PASSED
csw.params.core.generics.KeyParameterTest,test byteMatrixKey work with one matrix without and with units,PASSED
csw.params.core.generics.KeyParameterTest,test byteMatrixKey work with varargs,PASSED
csw.params.core.generics.KeyParameterTest,test byteMatrixKey work with varargs as arrays,PASSED
csw.params.core.generics.KeyParameterTest,test ShortItem should allow single val,PASSED
csw.params.core.generics.KeyParameterTest,test ShortItem should work with list, withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test ShortItem should work with list, units,PASSED
csw.params.core.generics.KeyParameterTest,test shortArrayKey should test single item,PASSED
csw.params.core.generics.KeyParameterTest,test shortArrayKey should test with list, withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test shortArrayKey should test with list, units,PASSED
csw.params.core.generics.KeyParameterTest,test shortArrayKey should test using one array with and without units,PASSED
csw.params.core.generics.KeyParameterTest,test shortArrayKey should test using var args,PASSED
csw.params.core.generics.KeyParameterTest,test shortMatrixKey should work with a single item,PASSED
csw.params.core.generics.KeyParameterTest,test shortMatrixKey should work with list and withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test shortMatrixKey should work with list and units,PASSED
csw.params.core.generics.KeyParameterTest,test shortMatrixKey work with one matrix without and with units,PASSED
csw.params.core.generics.KeyParameterTest,test shortMatrixKey work with varargs,PASSED
csw.params.core.generics.KeyParameterTest,test shortMatrixKey work with varargs as arrays,PASSED
csw.params.core.generics.KeyParameterTest,test IntItem should allow single val,PASSED
csw.params.core.generics.KeyParameterTest,test IntItem should work with list, withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test IntItem should work with list, units,PASSED
csw.params.core.generics.KeyParameterTest,test intArrayKey should test single item,PASSED
csw.params.core.generics.KeyParameterTest,test intArrayKey should test with list, withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test intArrayKey should test with list, units,PASSED
csw.params.core.generics.KeyParameterTest,test intArrayKey should test using one array with and without units,PASSED
csw.params.core.generics.KeyParameterTest,test intArrayKey should test using var args,PASSED
csw.params.core.generics.KeyParameterTest,test intMatrixKey should work with a single item,PASSED
csw.params.core.generics.KeyParameterTest,test intMatrixKey should work with list and withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test intMatrixKey should work with list and units,PASSED
csw.params.core.generics.KeyParameterTest,test intMatrixKey work with one matrix without and with units,PASSED
csw.params.core.generics.KeyParameterTest,test intMatrixKey work with varargs,PASSED
csw.params.core.generics.KeyParameterTest,test intMatrixKey work with varargs as arrays,PASSED
csw.params.core.generics.KeyParameterTest,test longKey should allow single val,PASSED
csw.params.core.generics.KeyParameterTest,test longKey should work with list, withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test longKey should work with list, units,PASSED
csw.params.core.generics.KeyParameterTest,test LongArrayKey should test single item,PASSED
csw.params.core.generics.KeyParameterTest,test LongArrayKey should test with list, withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test LongArrayKey should test with list, units,PASSED
csw.params.core.generics.KeyParameterTest,test LongArrayKey should test using one array with and without units,PASSED
csw.params.core.generics.KeyParameterTest,test LongArrayKey should test using var args,PASSED
csw.params.core.generics.KeyParameterTest,test longMatrixKey should work with a single item,PASSED
csw.params.core.generics.KeyParameterTest,test longMatrixKey should work with list and withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test longMatrixKey should work with list and units,PASSED
csw.params.core.generics.KeyParameterTest,test longMatrixKey work with one matrix without and with units,PASSED
csw.params.core.generics.KeyParameterTest,test longMatrixKey work with varargs,PASSED
csw.params.core.generics.KeyParameterTest,test longMatrixKey work with varargs as arrays,PASSED
csw.params.core.generics.KeyParameterTest,test floatItem should allow single val,PASSED
csw.params.core.generics.KeyParameterTest,test floatItem should work with list, withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test floatItem should work with list, units,PASSED
csw.params.core.generics.KeyParameterTest,test floatArrayKey should test single item,PASSED
csw.params.core.generics.KeyParameterTest,test floatArrayKey should test with list, withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test floatArrayKey should test with list, units,PASSED
csw.params.core.generics.KeyParameterTest,test floatArrayKey should test using one array with and without units,PASSED
csw.params.core.generics.KeyParameterTest,test floatArrayKey should test using var args,PASSED
csw.params.core.generics.KeyParameterTest,test floatMatrixKey should work with a single item,PASSED
csw.params.core.generics.KeyParameterTest,test floatMatrixKey should work with list and withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test floatMatrixKey should work with list and units,PASSED
csw.params.core.generics.KeyParameterTest,test floatMatrixKey work with one matrix without and with units,PASSED
csw.params.core.generics.KeyParameterTest,test floatMatrixKey work with varargs,PASSED
csw.params.core.generics.KeyParameterTest,test floatMatrixKey work with varargs as arrays,PASSED
csw.params.core.generics.KeyParameterTest,test doubleItem should allow single val,PASSED
csw.params.core.generics.KeyParameterTest,test doubleItem should work with list, withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test doubleItem should work with list, units,PASSED
csw.params.core.generics.KeyParameterTest,test doubleArrayKey should test single item,PASSED
csw.params.core.generics.KeyParameterTest,test doubleArrayKey should test with list, withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test doubleArrayKey should test with list, units,PASSED
csw.params.core.generics.KeyParameterTest,test doubleArrayKey should test using one array with and without units,PASSED
csw.params.core.generics.KeyParameterTest,test doubleArrayKey should test using var args,PASSED
csw.params.core.generics.KeyParameterTest,test doubleMatrixKey should work with a single item,PASSED
csw.params.core.generics.KeyParameterTest,test doubleMatrixKey should work with list and withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test doubleMatrixKey should work with list and units,PASSED
csw.params.core.generics.KeyParameterTest,test doubleMatrixKey work with one matrix without and with units,PASSED
csw.params.core.generics.KeyParameterTest,test doubleMatrixKey work with varargs,PASSED
csw.params.core.generics.KeyParameterTest,test doubleMatrixKey work with varargs as arrays,PASSED
csw.params.core.generics.KeyParameterTest,test TimestampItem should allow create a Timestamp parameter from a timestamp key,PASSED
csw.params.core.generics.KeyParameterTest,test TimestampItem and second must be default Unit,PASSED
csw.params.core.generics.KeyParameterTest,test TimestampItem should work with list, withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test TimestampItem should work with list, units,PASSED
csw.params.core.generics.KeyParameterTest,testing ChoiceItem should allow creating with Choices object,PASSED
csw.params.core.generics.KeyParameterTest,testing ChoiceItem should allow creating with varargs of Strings,PASSED
csw.params.core.generics.KeyParameterTest,testing ChoiceItem should allow creation with individual Choice items,PASSED
csw.params.core.generics.KeyParameterTest,test raDecKey should allow single val,PASSED
csw.params.core.generics.KeyParameterTest,test raDecKey should work with list, withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test raDecKey should work with list, units,PASSED
csw.params.core.generics.KeyParameterTest,test stringKey should allow single val,PASSED
csw.params.core.generics.KeyParameterTest,test stringKey should work with list, withUnits,PASSED
csw.params.core.generics.KeyParameterTest,test stringKey should work with list, units,PASSED
csw.params.core.generics.KeyParameterTest,testing StructItem should allow creating Struct items,PASSED
csw.params.core.generics.KeyParameterTest,test setting multiple values should allow setting a single value,PASSED
csw.params.core.generics.KeyParameterTest,test setting multiple values should allow setting several,PASSED
csw.params.core.generics.KeyParameterTest,test setting multiple values should also allow setting with sequence,PASSED
csw.params.core.generics.JSimpleKeyTypeTest,testBooleanKeyParameter,PASSED
csw.params.core.generics.JSimpleKeyTypeTest,testDoubleKeyParameter,PASSED
csw.params.core.generics.JSimpleKeyTypeTest,testCharKeyParameter,PASSED
csw.params.core.generics.JSimpleKeyTypeTest,testFloatKeyParameter,PASSED
csw.params.core.generics.JSimpleKeyTypeTest,testStructKeyParameter,PASSED
csw.params.core.generics.JSimpleKeyTypeTest,testIntegerKeyParameter,PASSED
csw.params.core.generics.JSimpleKeyTypeTest,testStringKeyParameter,PASSED
csw.params.core.generics.JSimpleKeyTypeTest,testTimestampKeyParameter,PASSED
csw.params.core.generics.JSimpleKeyTypeTest,testLongKeyParameter,PASSED
csw.params.core.generics.JSimpleKeyTypeTest,testShortKeyParameter,PASSED
csw.params.core.generics.JSimpleKeyTypeTest,testByteKeyParameter,PASSED
csw.params.core.generics.JSimpleKeyTypeTest,testRaDecKeyParameter,PASSED
csw.params.commands.CommandsTest,Setup config tests Should allow adding keys using single set,PASSED
csw.params.commands.CommandsTest,Setup config tests Should allow setting with units,PASSED
csw.params.commands.CommandsTest,Setup config tests Should allow apply which returns values,PASSED
csw.params.commands.CommandsTest,Setup config tests should update for the same key with set,PASSED
csw.params.commands.CommandsTest,Setup config tests Should able to create with Byte Parameteret,PASSED
csw.params.commands.CommandsTest,Setup config tests Should allow updates,PASSED
csw.params.commands.CommandsTest,Setup config tests Should allow to create setup without obsId,PASSED
csw.params.commands.CommandsTest,Setup config tests Should create new RunId when a parameter is added or removed,PASSED
csw.params.commands.CommandsTest,Observe config tests Should allow adding keys,PASSED
csw.params.commands.CommandsTest,Observe config tests Should allow setting,PASSED
csw.params.commands.CommandsTest,Observe config tests Should allow apply,PASSED
csw.params.commands.CommandsTest,Observe config tests should update for the same key with set,PASSED
csw.params.commands.CommandsTest,Observe config tests should update for the same key with add,PASSED
csw.params.commands.CommandsTest,Observe config tests Should create new RunId when a parameter is added or removed,PASSED
csw.params.commands.CommandsTest,Wait config tests Should allow adding keys,PASSED
csw.params.commands.CommandsTest,Wait config tests Should allow setting,PASSED
csw.params.commands.CommandsTest,Wait config tests Should allow apply,PASSED
csw.params.commands.CommandsTest,Wait config tests should update for the same key with set,PASSED
csw.params.commands.CommandsTest,Wait config tests should update for the same key with add,PASSED
csw.params.commands.CommandsTest,Wait config tests Should create new RunId when a parameter is added or removed,PASSED
csw.params.commands.CommandsTest,Checking for item types in configs Should get as IntItem,PASSED
csw.params.commands.CommandsTest,Check for multi-add Should allow vararg add,PASSED
csw.params.commands.CommandsTest,Should work with remove Setup command should allow removing one at a time,PASSED
csw.params.commands.CommandsTest,Should work with remove Observe command should allow removing one at a time,PASSED
csw.params.commands.CommandsTest,Should work with remove Wait command should allow removing one at a time,PASSED
csw.params.commands.CommandsTest,should work with remove by item Should allow removing one at a time,PASSED
csw.params.commands.CommandsTest,clone command test clone command creates a command from existing command with a new RunId for Setup, Observe or Wait,PASSED
csw.params.core.EqualityTest,Array-based long array equality should short circuit with identical same arrays,PASSED
csw.params.core.EqualityTest,Array-based long array equality should be equal with identical different arrays,PASSED
csw.params.core.EqualityTest,Array-based long array equality should fail with different valued arrays,PASSED
csw.params.core.EqualityTest,Array-based long array equality should work with items too when equal,PASSED
csw.params.core.EqualityTest,Array-based long array equality should fail with items when values not equal,PASSED
csw.params.core.EqualityTest,Array-based long matrix equality should short circuit with identical same matrices,PASSED
csw.params.core.EqualityTest,Array-based long matrix equality should be equal with identical different matrices,PASSED
csw.params.core.EqualityTest,Array-based long matrix equality should fail with different valued matrices,PASSED
csw.params.core.EqualityTest,Array-based long matrix equality should fail for totally different matrices,PASSED
csw.params.core.EqualityTest,Array-based byte array equality should short circuit with identical same arrays,PASSED
csw.params.core.EqualityTest,Array-based byte array equality should be equal with identical different arrays,PASSED
csw.params.core.EqualityTest,Array-based byte array equality should fail with different valued arrays,PASSED
csw.params.core.EqualityTest,Array-based byte array equality should work with items too when equal,PASSED
csw.params.core.EqualityTest,Array-based byte array equality should fail with items when values not equal,PASSED
csw.params.core.EqualityTest,Array-based byte matrix equality should short circuit with identical same matrices,PASSED
csw.params.core.EqualityTest,Array-based byte matrix equality should be equal with identical different matrices,PASSED
csw.params.core.EqualityTest,Array-based byte matrix equality should fail with different valued matrices,PASSED
csw.params.core.EqualityTest,Array-based byte matrix equality should fail for totally different matrices,PASSED
csw.params.core.EqualityTest,Array-based double array equality should short circuit with identical same arrays,PASSED
csw.params.core.EqualityTest,Array-based double array equality should be equal with identical different arrays,PASSED
csw.params.core.EqualityTest,Array-based double array equality should fail with different valued arrays,PASSED
csw.params.core.EqualityTest,Array-based double array equality should work with items too when equal,PASSED
csw.params.core.EqualityTest,Array-based double array equality should fail with items when values not equal,PASSED
csw.params.core.EqualityTest,Array-based double matrix equality should short circuit with identical same matrices,PASSED
csw.params.core.EqualityTest,Array-based double matrix equality should be equal with identical different matrices,PASSED
csw.params.core.EqualityTest,Array-based double matrix equality should fail with different valued matrices,PASSED
csw.params.core.EqualityTest,Array-based double matrix equality should fail for totally different matrices,PASSED
csw.params.core.EqualityTest,Array-based float array equality should short circuit with identical same arrays,PASSED
csw.params.core.EqualityTest,Array-based float array equality should be equal with identical different arrays,PASSED
csw.params.core.EqualityTest,Array-based float array equality should fail with different valued arrays,PASSED
csw.params.core.EqualityTest,Array-based float array equality should work with items too when equal,PASSED
csw.params.core.EqualityTest,Array-based float array equality should fail with items when values not equal,PASSED
csw.params.core.EqualityTest,Array-based float matrix equality should short circuit with identical same matrices,PASSED
csw.params.core.EqualityTest,Array-based float matrix equality should be equal with identical different matrices,PASSED
csw.params.core.EqualityTest,Array-based float matrix equality should fail with different valued matrices,PASSED
csw.params.core.EqualityTest,Array-based float matrix equality should fail for totally different matrices,PASSED
csw.params.core.EqualityTest,Array-based int array equality should short circuit with identical same arrays,PASSED
csw.params.core.EqualityTest,Array-based int array equality should be equal with identical different arrays,PASSED
csw.params.core.EqualityTest,Array-based int array equality should fail with different valued arrays,PASSED
csw.params.core.EqualityTest,Array-based int array equality should work with items too when equal,PASSED
csw.params.core.EqualityTest,Array-based int array equality should fail with items when values not equal,PASSED
csw.params.core.EqualityTest,Array-based int matrix equality should short circuit with identical same matrices,PASSED
csw.params.core.EqualityTest,Array-based int matrix equality should be equal with identical different matrices,PASSED
csw.params.core.EqualityTest,Array-based int matrix equality should fail with different valued matrices,PASSED
csw.params.core.EqualityTest,Array-based int matrix equality should fail for totally different matrices,PASSED
csw.params.core.EqualityTest,Array-based short array equality should short circuit with identical same arrays,PASSED
csw.params.core.EqualityTest,Array-based short array equality should be equal with identical different arrays,PASSED
csw.params.core.EqualityTest,Array-based short array equality should fail with different valued arrays,PASSED
csw.params.core.EqualityTest,Array-based short array equality should work with items too when equal,PASSED
csw.params.core.EqualityTest,Array-based short array equality should fail with items when values not equal,PASSED
csw.params.core.EqualityTest,Array-based short matrix equality should short circuit with identical same matrices,PASSED
csw.params.core.EqualityTest,Array-based short matrix equality should be equal with identical different matrices,PASSED
csw.params.core.EqualityTest,Array-based short matrix equality should fail with different valued matrices,PASSED
csw.params.core.EqualityTest,Array-based short matrix equality should fail for totally different matrices,PASSED
csw.params.core.generics.UniqueKeyVerificationTest,Test Commands Setup command is able to remove duplicate keys,PASSED
csw.params.core.generics.UniqueKeyVerificationTest,Test Commands Observe command is able to remove duplicate keys,PASSED
csw.params.core.generics.UniqueKeyVerificationTest,Test Commands Wait command is able to remove duplicate keys,PASSED
csw.params.core.generics.UniqueKeyVerificationTest,Test Result is able to remove duplicate keys,PASSED
csw.params.core.generics.UniqueKeyVerificationTest,Test Struct is able to remove duplicate keys,PASSED
csw.params.core.generics.UniqueKeyVerificationTest,Test StateVariables DemandState is able to remove duplicate keys,PASSED
csw.params.core.generics.UniqueKeyVerificationTest,Test StateVariables CurrentState is able to remove duplicate keys,PASSED
csw.params.core.generics.UniqueKeyVerificationTest,Test Events ObserveEvent command is able to remove duplicate keys,PASSED
csw.params.core.generics.UniqueKeyVerificationTest,Test Events SystemEvent command is able to remove duplicate keys,PASSED
csw.params.core.generics.SerializationTest,ConfigType kryo serialization,PASSED
csw.params.core.generics.SerializationTest,System event kryo serialization,PASSED
csw.params.core.generics.SerializationTest,CurrentStates kryo serialization,PASSED
csw.command.client.JCommandResponseManagerTest,shouldDelegateToJQueryFinal,PASSED
csw.command.client.JCommandResponseManagerTest,shouldDelegateToJQuery,PASSED
csw.command.client.internal.CommandResponseManagerBehaviorTest,should be able to add command entry in Command Response Manager,PASSED
csw.command.client.internal.CommandResponseManagerBehaviorTest,should be able to add correlation between parent and child via AddSubCommand,PASSED
csw.command.client.internal.CommandResponseManagerBehaviorTest,should be able to add subscriber and publish current state to newly added subscriber,PASSED
csw.command.client.internal.CommandResponseManagerBehaviorTest,should not get update for long running command that returns Started,PASSED
csw.command.client.internal.CommandResponseManagerBehaviorTest,should not be able to set value to Intermediate after Final in Command Response Manager,PASSED
csw.command.client.internal.CommandResponseManagerBehaviorTest,should be able to remove subscriber,PASSED
csw.command.client.internal.CommandResponseManagerBehaviorTest,should be able to get current status of command on Query message,PASSED
csw.command.client.internal.CommandResponseManagerBehaviorTest,should be able to update and publish command status to all subscribers,PASSED
csw.command.client.internal.CommandResponseManagerBehaviorTest,should be able to infer command status when status of sub command is updated,PASSED
csw.command.client.internal.CommandResponseManagerBehaviorTest,should be able to update command status with the status of subcommand if one of the subcommand fails,PASSED
csw.command.client.internal.CommandResponseManagerBehaviorTest,should be able to update successful command status when all the subcommand completes with success,PASSED
csw.command.client.internal.CommandResponseManagerBehaviorTest,CRM queryFinal actually works,PASSED
csw.command.client.internal.CommandResponseManagerBehaviorTest,CRM should support three level tree including sequenceId as top level,PASSED
csw.command.client.internal.CommandResponseManagerBehaviorTest,should be able subscribe before submitting command and gets added to CRM,PASSED
csw.params.core.InterOperabilityTest,should able to send commands/events from scala code to java and vice a versa,PASSED
csw.command.client.CommandResponseManagerTest,should delegate to addOrUpdateCommand,PASSED
csw.command.client.CommandResponseManagerTest,should delegate to addSubCommand,PASSED
csw.command.client.CommandResponseManagerTest,should delegate to updateSubCommand,PASSED
csw.command.client.CommandResponseManagerTest,should delegate to query,PASSED
csw.command.client.CommandResponseManagerTest,queryFinal should delegate to Subscribe,PASSED
csw.params.AkkaKryoSerializationTest,Test akka serialization of Commands should serialize Setup,PASSED
csw.params.AkkaKryoSerializationTest,Test akka serialization of Commands should serialize Wait,PASSED
csw.params.AkkaKryoSerializationTest,Test akka serialization of Events should serialize ObserveEvent,PASSED
csw.params.AkkaKryoSerializationTest,Test akka serialization of Events should serialize SystemEvent,PASSED
csw.params.AkkaKryoSerializationTest,Test akka serialization of StateVariables should serialize CurrentState,PASSED
csw.params.AkkaKryoSerializationTest,Test akka serialization of StateVariables should serialize DemandState,PASSED
csw.params.AkkaKryoSerializationTest,csw messages should serialize ToComponentLifecycle messages,PASSED
csw.params.AkkaKryoSerializationTest,csw messages should serialize Lifecycle messages,PASSED
csw.params.AkkaKryoSerializationTest,csw messages should serialize Common messages for all components,PASSED
csw.params.AkkaKryoSerializationTest,csw messages should serialize Common messages for supervisor,PASSED
csw.params.AkkaKryoSerializationTest,csw messages should serialize Common messages for container,PASSED
csw.params.AkkaKryoSerializationTest,csw messages should serialize CommandValidationResponse messages,PASSED
csw.params.AkkaKryoSerializationTest,csw messages should serialize CommandExecutionResponse messages,PASSED
org.scalatest.DeferredAbortedSuite,NONE,ABORTED
org.scalatest.DeferredAbortedSuite,NONE,ABORTED
org.scalatest.DeferredAbortedSuite,NONE,ABORTED
org.scalatest.DeferredAbortedSuite,NONE,ABORTED
org.scalatest.DeferredAbortedSuite,NONE,ABORTED
org.scalatest.DeferredAbortedSuite,NONE,ABORTED
org.scalatest.DeferredAbortedSuite,NONE,ABORTED
org.scalatest.DeferredAbortedSuite,NONE,ABORTED
csw.framework.deploy.hostconfig.cli.ArgsParserTest,should able to parse when all arguments are provided,PASSED
csw.framework.deploy.hostconfig.cli.ArgsParserTest,should able to parse arguments with default value of false when local option is not provided,PASSED
csw.framework.deploy.hostconfig.cli.ArgsParserTest,should not parse if inputFilePath is not provided,PASSED
csw.framework.deploy.hostconfig.cli.ArgsParserTest,should not parse if no arguments provided,PASSED
org.scalatest.DeferredAbortedSuite,NONE,ABORTED
csw.framework.internal.configparser.ConfigParserTest,should able to parse container config,PASSED
csw.framework.internal.configparser.ConfigParserTest,should able to throw error when 'name' is missing,PASSED
csw.framework.internal.configparser.ConfigParserTest,should able to throw error when 'components' is missing,PASSED
csw.framework.internal.configparser.ConfigParserTest,should able to throw error when 'components' is not a config object,PASSED
csw.framework.internal.configparser.ConfigParserTest,should able to parse standalone assembly config,PASSED
csw.framework.internal.configparser.ConfigParserTest,should able to throw error when 'behaviorFactoryClassName' is missing for assembly,PASSED
csw.framework.internal.configparser.ConfigParserTest,should able to throw error when 'prefix' is missing for assembly,PASSED
csw.framework.internal.configparser.ConfigParserTest,should able to throw error when 'locationServiceUsage' is missing for assembly,PASSED
csw.framework.internal.configparser.ConfigParserTest,should able to throw error when 'connections' is not an array for assembly,PASSED
csw.framework.internal.configparser.ConfigParserTest,should able to throw error when connection ingredients has typos for 'connections' in assembly,PASSED
csw.framework.internal.configparser.ConfigParserTest,should able to throw error when 'componentType' is missing for assembly,PASSED
csw.framework.internal.configparser.ConfigParserTest,should able to throw error when 'behaviorFactoryClassName' is missing for hcd,PASSED
csw.framework.internal.configparser.ConfigParserTest,should able to throw error when 'prefix' is missing for hcd,PASSED
csw.framework.internal.configparser.ConfigParserTest,should able to throw error when 'locationServiceUsage' is missing for hcd,PASSED
csw.framework.internal.configparser.ConfigParserTest,should able to throw error when 'componentType' is missing for hcd,PASSED
csw.framework.internal.configparser.ConfigParserTest,should able to throw error when 'name' is missing for standalone mode,PASSED
csw.framework.internal.configparser.ConfigParserTest,should able to parse host config,PASSED
csw.framework.internal.configparser.ConfigParserTest,should able to throw error when provided mode is invalid in host config,PASSED
csw.framework.internal.configparser.ConfigParserTest,should able to throw error when provided location is invalid in host config,PASSED
csw.framework.deploy.containercmd.cli.ArgsParserTest,should parse arguments when all arguments are provided,PASSED
csw.framework.deploy.containercmd.cli.ArgsParserTest,should parse arguments with default value of false when standalone option is not provided,PASSED
csw.framework.deploy.containercmd.cli.ArgsParserTest,should parse arguments with default value of false when local option is not provided,PASSED
org.scalatest.DeferredAbortedSuite,NONE,ABORTED
org.scalatest.DeferredAbortedSuite,NONE,ABORTED
org.scalatest.DeferredAbortedSuite,NONE,ABORTED
org.scalatest.DeferredAbortedSuite,NONE,ABORTED
org.scalatest.DeferredAbortedSuite,NONE,ABORTED
org.scalatest.DeferredAbortedSuite,NONE,ABORTED
csw.event.client.pb.JPbParameterTest,booleanParam,PASSED
csw.event.client.pb.JPbParameterTest,stringArrayParam,PASSED
csw.event.client.pb.JPbParameterTest,event,PASSED
csw.event.client.pb.ProtobufSerializationTest,Test protobuf serialization of Events should serialize ObserveEvent,PASSED
csw.event.client.pb.ProtobufSerializationTest,Test protobuf serialization of Events should serialize SystemEvent,PASSED
csw.event.client.EventPublisherTest,should_be_able_to_maintain_ordering_while_publish(Redis),PASSED
csw.event.client.EventPublisherTest,should_be_able_to_maintain_ordering_while_publish(Kafka),PASSED
csw.event.client.EventPublisherTest,should_be_able_to_publish_an_event_with_block_genrating_future_of_event(Redis),PASSED
csw.event.client.EventPublisherTest,should_be_able_to_publish_an_event_with_block_genrating_future_of_event(Kafka),PASSED
csw.event.client.EventPublisherTest,should_be_able_to_publish_an_event_with_duration(Redis),PASSED
csw.event.client.EventPublisherTest,should_be_able_to_publish_an_event_with_duration(Kafka),PASSED
csw.event.client.EventPublisherTest,should_be_able_to_publish_and_subscribe_an_event(Redis),PASSED
csw.event.client.EventPublisherTest,should_be_able_to_publish_and_subscribe_an_event(Kafka),PASSED
csw.event.client.EventPublisherTest,should_be_able_to_publish_concurrently_to_the_different_channel(Redis),PASSED
csw.event.client.EventPublisherTest,should_be_able_to_publish_concurrently_to_the_different_channel(Kafka),PASSED
csw.event.client.EventSubscriptionFrequencyTest,should_be_able_to_subscribe_an_event_with_duration_with_rate_adapter_for_fast_publisher(Redis),PASSED
csw.event.client.EventSubscriptionFrequencyTest,should_be_able_to_subscribe_an_event_with_duration_with_rate_adapter_for_fast_publisher(Kafka),PASSED
csw.event.client.EventSubscriptionFrequencyTest,should_be_able_to_subscribe_with_duration_with_rate_adapter_mode_for_slow_publisher(Redis),PASSED
csw.event.client.EventSubscriptionFrequencyTest,should_be_able_to_subscribe_with_duration_with_rate_adapter_mode_for_slow_publisher(Kafka),PASSED
csw.event.client.EventSubscriptionFrequencyTest,should_be_able_to_subscribe_with_duration_with_rate_limiter_mode_for_fast_publisher(Redis),PASSED
csw.event.client.EventSubscriptionFrequencyTest,should_be_able_to_subscribe_with_duration_with_rate_limiter_mode_for_fast_publisher(Kafka),PASSED
csw.event.client.EventSubscriptionFrequencyTest,should_be_able_to_subscribe_with_duration_with_rate_limiter_mode_for_slow_publisher(Redis),PASSED
csw.event.client.EventSubscriptionFrequencyTest,should_be_able_to_subscribe_with_duration_with_rate_limiter_mode_for_slow_publisher(Kafka),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_get_InvalidEvent(Redis),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_get_InvalidEvent(Kafka),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_get_an_event_without_subscribing_for_it(Redis),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_get_an_event_without_subscribing_for_it(Kafka),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_get_events_for_multiple_event_keys(Redis),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_get_events_for_multiple_event_keys(Kafka),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_make_independent_subscriptions(Redis),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_make_independent_subscriptions(Kafka),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_retrieve_InvalidEvent(Redis),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_retrieve_InvalidEvent(Kafka),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_retrieve_recently_published_event_on_subscription(Redis),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_retrieve_recently_published_event_on_subscription(Kafka),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_retrieve_valid_as_well_as_invalid_event_when_events_are_published_for_some_and_not_for_other_keys(Redis),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_retrieve_valid_as_well_as_invalid_event_when_events_are_published_for_some_and_not_for_other_keys(Kafka),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_subscribe_an_event(Redis),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_subscribe_an_event(Kafka),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_subscribe_an_event_with_pattern_from_different_subsystem(Redis),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_subscribe_an_event_with_pattern_from_same_subsystem(Redis),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_subscribe_with_an_ActorRef(Redis),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_subscribe_with_an_ActorRef(Kafka),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_subscribe_with_an_ActorRef_with_duration(Redis),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_subscribe_with_an_ActorRef_with_duration(Kafka),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_subscribe_with_async_callback(Redis),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_subscribe_with_async_callback(Kafka),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_subscribe_with_async_callback_with_duration(Redis),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_subscribe_with_async_callback_with_duration(Kafka),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_subscribe_with_callback(Redis),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_subscribe_with_callback(Kafka),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_subscribe_with_callback_with_duration(Redis),PASSED
csw.event.client.JEventSubscriberTest,should_be_able_to_subscribe_with_callback_with_duration(Kafka),PASSED
csw.event.client.JEventSubscriptionFrequencyTest,should_be_able_to_subscribe_with_duration_with_rate_adapter_for_fast_publisher(Redis),PASSED
csw.event.client.JEventSubscriptionFrequencyTest,should_be_able_to_subscribe_with_duration_with_rate_adapter_for_fast_publisher(Kafka),PASSED
csw.event.client.JEventSubscriptionFrequencyTest,should_be_able_to_subscribe_with_duration_with_rate_adapter_mode_for_slow_publisher(Redis),PASSED
csw.event.client.JEventSubscriptionFrequencyTest,should_be_able_to_subscribe_with_duration_with_rate_adapter_mode_for_slow_publisher(Kafka),PASSED
csw.event.client.JEventSubscriptionFrequencyTest,should_be_able_to_subscribe_with_duration_with_rate_limiter_mode_for_fast_publisher(Redis),PASSED
csw.event.client.JEventSubscriptionFrequencyTest,should_be_able_to_subscribe_with_duration_with_rate_limiter_mode_for_fast_publisher(Kafka),PASSED
csw.event.client.JEventSubscriptionFrequencyTest,should_be_able_to_subscribe_with_duration_with_rate_limiter_mode_for_slow_publisher(Redis),PASSED
csw.event.client.JEventSubscriptionFrequencyTest,should_be_able_to_subscribe_with_duration_with_rate_limiter_mode_for_slow_publisher(Kafka),PASSED
csw.event.client.internal.redis.JRedisFailureTest,failureInPublishingShouldFailFutureWithPublishFailedException,PASSED
csw.event.client.internal.redis.JRedisFailureTest,handleFailedPublishEventWithACallback,PASSED
csw.event.client.internal.redis.JRedisFailureTest,handleFailedPublishEventWithAnEventGeneratorAndACallback,PASSED
csw.event.client.internal.redis.JRedisFailureTest,handleFailedPublishEventWithAnEventGeneratorGeneratingFutureOfEventAndACallback,PASSED
csw.event.client.JEventPublisherTest,should_be_able_to_maintain_ordering_while_publish(Redis),PASSED
csw.event.client.JEventPublisherTest,should_be_able_to_maintain_ordering_while_publish(Kafka),PASSED
csw.event.client.JEventPublisherTest,should_be_able_to_publish_an_event_with_block_generating_future_of_event_with_duration(Redis),PASSED
csw.event.client.JEventPublisherTest,should_be_able_to_publish_an_event_with_block_generating_future_of_event_with_duration(Kafka),PASSED
csw.event.client.JEventPublisherTest,should_be_able_to_publish_an_event_with_duration(Redis),PASSED
csw.event.client.JEventPublisherTest,should_be_able_to_publish_an_event_with_duration(Kafka),PASSED
csw.event.client.JEventPublisherTest,should_be_able_to_publish_and_subscribe_an_event(Redis),PASSED
csw.event.client.JEventPublisherTest,should_be_able_to_publish_and_subscribe_an_event(Kafka),PASSED
csw.event.client.JEventPublisherTest,should_be_able_to_publish_concurrently_to_the_different_channel(Redis),PASSED
csw.event.client.JEventPublisherTest,should_be_able_to_publish_concurrently_to_the_different_channel(Kafka),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_get_InvalidEvent(Redis),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_get_InvalidEvent(Kafka),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_get_an_event_without_subscribing_for_it(Redis),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_get_an_event_without_subscribing_for_it(Kafka),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_get_events_for_multiple_event_keys(Redis),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_get_events_for_multiple_event_keys(Kafka),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_get_invalid_event_on_event_parse_failure(Redis),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_get_invalid_event_on_event_parse_failure(Kafka),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_make_independent_subscriptions(Redis),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_make_independent_subscriptions(Kafka),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_retrieve_InvalidEvent(Redis),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_retrieve_InvalidEvent(Kafka),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_retrieve_recently_published_event_on_subscription(Redis),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_retrieve_recently_published_event_on_subscription(Kafka),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_retrieve_valid_as_well_as_invalid_event_when_events_are_published_for_some_and_not_for_other_keys(Redis),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_retrieve_valid_as_well_as_invalid_event_when_events_are_published_for_some_and_not_for_other_keys(Kafka),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_subscribe_an_event(Redis),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_subscribe_an_event(Kafka),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_subscribe_an_event_with_pattern_from_different_subsystem(Redis),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_subscribe_an_event_with_pattern_from_same_subsystem(Redis),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_subscribe_with_an_ActorRef(Redis),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_subscribe_with_an_ActorRef(Kafka),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_subscribe_with_an_ActorRef_with_duration(Redis),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_subscribe_with_an_ActorRef_with_duration(Kafka),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_subscribe_with_async_callback(Redis),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_subscribe_with_async_callback(Kafka),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_subscribe_with_async_callback_with_duration(Redis),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_subscribe_with_async_callback_with_duration(Kafka),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_subscribe_with_callback(Redis),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_subscribe_with_callback(Kafka),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_subscribe_with_callback_with_duration(Redis),PASSED
csw.event.client.EventSubscriberTest,should_be_able_to_subscribe_with_callback_with_duration(Kafka),PASSED
csw.event.client.pb.PbParameterTest,should able to parse PbParameter with multiple values,PASSED
csw.event.client.pb.PbParameterTest,should able to parse PbParameter with sequence of values,PASSED
csw.event.client.pb.PbParameterTest,should able to create Boolean Items,PASSED
csw.event.client.pb.PbParameterTest,should able to create PbParameter with Timestamp items,PASSED
csw.event.client.pb.PbParameterTest,should able to create PbParameter with Byte items,PASSED
csw.event.client.pb.PbParameterTest,should able to create PbParameter with Choice items,PASSED
csw.event.client.pb.PbParameterTest,should able to create PbParameter with int items only when KeyType is Int,PASSED
csw.event.client.pb.PbParameterTest,should able to create PbParameter and compare with Parameter for Int and String Key,PASSED
csw.event.client.pb.PbParameterTest,should able to create PbParameter with ArrayItems,PASSED
csw.event.client.pb.PbParameterTest,should able to create PbParameter with MatrixItems,PASSED
csw.event.client.pb.PbParameterTest,should able to change the type from/to PbParameter to/from Parameter for IntKey,PASSED
csw.event.client.pb.PbParameterTest,should able to change the type from/to PbParameter to/from Parameter for IntArrayKey,PASSED
csw.event.client.pb.PbParameterTest,should able to change the type from/to PbParameter to/from Parameter for IntMatrixKey,PASSED
csw.event.client.pb.PbParameterTest,should able to change the type from/to PbParameter to/from Parameter using java api,PASSED
csw.event.client.pb.PbParameterTest,should able to change the type from/to PbParameter to/from Parameter for RaDec,PASSED
csw.event.client.internal.kafka.KafkaFailureTest,failure in publishing should fail future with PublishFailed exception,PASSED
csw.event.client.internal.kafka.KafkaFailureTest,handle failed publish event with a callback,PASSED
csw.event.client.internal.kafka.KafkaFailureTest,handle failed publish event with an eventGenerator and a callback,PASSED
csw.event.client.internal.kafka.KafkaFailureTest,handle failed publish event with an eventGenerator generating future of event and a callback,PASSED
csw.event.client.internal.redis.RedisFailureTest,should throw PublishFailed exception on publish failure,PASSED
csw.event.client.internal.redis.RedisFailureTest,should invoke onError callback on publish failure [stream API],PASSED
csw.event.client.internal.redis.RedisFailureTest,should invoke onError callback on publish failure [eventGenerator API],PASSED
csw.event.client.internal.redis.RedisFailureTest,should throw EventServerNotAvailable exception on subscription failure,PASSED
csw.event.client.internal.redis.RedisFailureTest,should invoke onError callback on publish failure [eventGenerator API] with future of event generator,PASSED
csw.event.client.internal.kafka.JKafkaFailureTest,failureInPublishingShouldFailFutureWithPublishFailedException,PASSED
csw.event.client.internal.kafka.JKafkaFailureTest,handleFailedPublishEventWithACallback,PASSED
csw.event.client.internal.kafka.JKafkaFailureTest,handleFailedPublishEventWithAnEventGeneratorAndACallback,PASSED
csw.event.client.internal.kafka.JKafkaFailureTest,handleFailedPublishEventWithAnEventGeneratorGeneratingFutureOfEventAndACallback,PASSED
csw.event.cli.args.ArgsParserTest,parse without arguments,PASSED
csw.event.cli.args.ArgsParserTest,parse inspect command without any options,PASSED
csw.event.cli.args.ArgsParserTest,parse inspect command with only mandatory options,PASSED
csw.event.cli.args.ArgsParserTest,parse get command without any options,PASSED
csw.event.cli.args.ArgsParserTest,parse get with only mandatory options,PASSED
csw.event.cli.args.ArgsParserTest,parse get with json output,PASSED
csw.event.cli.args.ArgsParserTest,parse get with all options,PASSED
csw.event.cli.args.ArgsParserTest,parse publish when input data file does not exist,PASSED
csw.event.cli.args.ArgsParserTest,parse publish with mandatory fields when input data file exist,PASSED
csw.event.cli.args.ArgsParserTest,parse publish with all fields when input data file exist,PASSED
csw.event.cli.args.ArgsParserTest,parse publish with only params provided,PASSED
csw.event.cli.args.ParameterArgParserTest,should able to parse valid single param string when key name, type, units & values provided,PASSED
csw.event.cli.args.ParameterArgParserTest,should able to parse valid string params,PASSED
csw.event.cli.args.ParameterArgParserTest,should able to parse valid string params with single quote and comma,PASSED
csw.event.cli.args.ParameterArgParserTest,should able to parse all valid space separated multi param string,PASSED
csw.event.cli.args.ParameterArgParserTest,should throw exception when values are not provided for some of the param,PASSED
csw.event.cli.args.ParameterArgParserTest,should throw exception when unsupported key type provided,PASSED
csw.event.cli.args.ParameterArgParserTest,should throw exception when invalid unit provided,PASSED
csw.event.cli.args.KeyArgTest,should able to parse valid ':' separated string when key name, type and units provided,PASSED
csw.event.cli.args.KeyArgTest,should able to parse valid ':' separated string when units are not provided,PASSED
csw.event.cli.args.KeyArgTest,should throw exception when key type is missing,PASSED
csw.event.cli.utils.EventOnelineTransformerTest,should be able to inspect entire event in oneline format,PASSED
csw.event.cli.utils.EventOnelineTransformerTest,should be able to get entire event in oneline format,PASSED
csw.event.cli.utils.EventOnelineTransformerTest,should be able to get specified paths for event in oneline format,PASSED
csw.event.cli.utils.EventOnelineTransformerTest,should be able to get paths for multiple events in oneline format,PASSED
csw.event.cli.utils.EventOnelineTransformerTest,should be able to get partial struct paths from event in oneline format,PASSED
csw.event.cli.utils.EventOnelineTransformerTest,should be able to log timestamp in oneline format,PASSED
csw.event.cli.utils.EventOnelineTransformerTest,should be able to log id per event in oneline format,PASSED
csw.event.cli.utils.EventOnelineTransformerTest,should be able to log units per event in oneline format,PASSED
csw.event.cli.utils.EventJsonTransformerTest,should be able to get entire event json when no paths are specified,PASSED
csw.event.cli.utils.EventJsonTransformerTest,should be able to get top level non struct key from json,PASSED
csw.event.cli.utils.EventJsonTransformerTest,should be able to get top level partial struct key from json,PASSED
csw.event.cli.utils.EventJsonTransformerTest,should be able to get specified paths two levels deep in event in json format,PASSED
csw.event.cli.utils.EventJsonTransformerTest,should be able to get multiple specified paths in event in json format,PASSED
csw.event.cli.utils.EventJsonTransformerTest,should be able to get specified paths for multiple events in json format,PASSED
csw.event.cli.utils.EventJsonTransformerTest,should be able to get full struct if both partial struct path and full path are given,PASSED
csw.alarm.api.models.FullAlarmSeverityTest,should match enum values,PASSED
csw.alarm.api.models.AlarmHealthTest,should match enum values,PASSED
csw.alarm.api.models.AlarmHealthTest,severities Okay, Warning should result in Good health,PASSED
csw.alarm.api.models.AlarmHealthTest,severity Major should result in Ill health,PASSED
csw.alarm.api.models.AlarmHealthTest,severities Disconnected, Indeterminate, Critical should result in Bad health,PASSED
csw.alarm.api.models.AlarmTypeTest,should match enum values,PASSED
csw.alarm.api.models.KeyTest,AlarmKey should be representing a unique alarm,PASSED
csw.alarm.api.models.KeyTest,SubsystemKey should be representing keys for all alarms of a subsystem,PASSED
csw.alarm.api.models.KeyTest,ComponentKey should be representing keys for all alarms of a component,PASSED
csw.alarm.api.models.KeyTest,GlobalKey should be representing keys for all alarms,PASSED
csw.alarm.api.models.KeyTest,AlarmKey should not allow '*' character,PASSED
csw.alarm.api.models.KeyTest,AlarmKey should not allow '[' character,PASSED
csw.alarm.api.models.KeyTest,AlarmKey should not allow ']' character,PASSED
csw.alarm.api.models.KeyTest,AlarmKey should not allow '-' character,PASSED
csw.alarm.api.models.KeyTest,AlarmKey should not allow '^' character,PASSED
csw.alarm.api.models.KeyTest,ComponentKey should not allow '*' character,PASSED
csw.alarm.api.models.KeyTest,ComponentKey should not allow '[' character,PASSED
csw.alarm.api.models.KeyTest,ComponentKey should not allow ']' character,PASSED
csw.alarm.api.models.KeyTest,ComponentKey should not allow '-' character,PASSED
csw.alarm.api.models.KeyTest,ComponentKey should not allow '^' character,PASSED
csw.alarm.api.models.KeyTest,ComponentKey should not allow empty values,PASSED
csw.alarm.api.models.KeyTest,AlarmKey should not allow empty values,PASSED
csw.alarm.api.models.AlarmMetadataTest,should get alarm key from AlarmMetadata,PASSED
csw.alarm.api.models.AlarmMetadataTest,should always support Indeterminate and Okay severities,PASSED
csw.alarm.api.models.AlarmMetadataTest,should tell if the alarm is active or not,PASSED
csw.alarm.api.models.AlarmMetadataTest,should be able to get description of the alarm,PASSED
csw.alarm.api.models.AlarmMetadataTest,should be able to get alarm type,PASSED
csw.alarm.api.models.AlarmMetadataTest,should get probable cause from AlarmMetadata,PASSED
csw.alarm.api.models.AlarmMetadataTest,should get operator response from AlarmMetadata,PASSED
csw.alarm.api.models.AlarmMetadataTest,should be able to determine if alarm can be auto-acknowledged,PASSED
csw.alarm.api.models.AlarmMetadataTest,should be able to determine if alarm can be latched,PASSED
csw.alarm.api.models.ShelveStatusTest,should match enum values,PASSED
csw.alarm.api.models.AcknowledgementStatusTest,should match enum values,PASSED
csw.alarm.api.models.AlarmSeverityTest,should match enum values,PASSED
csw.alarm.api.models.ActivationStatusTest,should match enum values,PASSED
csw.alarm.client.internal.shelve.TimeExtensionsTest,untilNext text,PASSED
org.scalatest.DeferredAbortedSuite,NONE,ABORTED
csw.alarm.cli.args.ArgsParserTest,parse without specifying operation,PASSED
csw.alarm.cli.args.ArgsParserTest,parse init command without any options,PASSED
csw.alarm.cli.args.ArgsParserTest,parse init command with only mandatory options,PASSED
csw.alarm.cli.args.ArgsParserTest,parse init command with all options,PASSED
csw.alarm.cli.args.ArgsParserTest,parse severity without sub command,PASSED
csw.alarm.cli.args.ArgsParserTest,parse set severity command,PASSED
csw.alarm.cli.args.ArgsParserTest,parse get severity command,PASSED
csw.alarm.cli.args.ArgsParserTest,parse subscribe severity command,PASSED
csw.alarm.cli.args.ArgsParserTest,parse refresh severity command,PASSED
csw.alarm.cli.args.ArgsParserTest,parse acknowledge command,PASSED
csw.alarm.cli.args.ArgsParserTest,parse acknowledge without options,PASSED
csw.alarm.cli.args.ArgsParserTest,parse unacknowledge command,PASSED
csw.alarm.cli.args.ArgsParserTest,parse unacknowledge without options,PASSED
csw.alarm.cli.args.ArgsParserTest,parse activate command,PASSED
csw.alarm.cli.args.ArgsParserTest,parse activate without options,PASSED
csw.alarm.cli.args.ArgsParserTest,parse deactivate command,PASSED
csw.alarm.cli.args.ArgsParserTest,parse deactivate without options,PASSED
csw.alarm.cli.args.ArgsParserTest,parse shelve command,PASSED
csw.alarm.cli.args.ArgsParserTest,parse shelve without options,PASSED
csw.alarm.cli.args.ArgsParserTest,parse unshelve command,PASSED
csw.alarm.cli.args.ArgsParserTest,parse unshelve without options,PASSED
csw.alarm.cli.args.ArgsParserTest,parse reset command,PASSED
csw.alarm.cli.args.ArgsParserTest,parse reset without options,PASSED
csw.alarm.cli.args.ArgsParserTest,parse list command without options,PASSED
csw.alarm.cli.args.ArgsParserTest,parse list command,PASSED
csw.alarm.cli.args.ArgsParserTest,parse list command with status with full alarm key,PASSED
csw.alarm.cli.args.ArgsParserTest,parse list command with status with subsystem key,PASSED
csw.alarm.cli.args.ArgsParserTest,parse list command with metadata with component key,PASSED
csw.alarm.cli.args.ArgsParserTest,parse list command only with subsystem and/or component options,PASSED
csw.alarm.cli.args.ArgsParserTest,parse list command  with invalid options,PASSED
csw.alarm.cli.args.ArgsParserTest,parse health without sub command,PASSED
csw.alarm.cli.args.ArgsParserTest,parse get health command,PASSED
csw.alarm.cli.args.ArgsParserTest,parse health command only with subsystem and/or component options,PASSED
csw.alarm.cli.args.ArgsParserTest,parse subscribe health command,PASSED
